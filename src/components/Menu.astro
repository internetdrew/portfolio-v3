---
import { Image } from "astro:assets";
import caratIcon from "../icons/right-carat.svg";
---

<div
  id="menu-control"
  class="relative text-slate-50 text-lg sm:text-base sm:text-slate-800"
>
  <div
    id="menu"
    class="absolute bg-slate-700 invisible opacity-0 transition-opacity duration-150 top-8 right-0 min-w-36 border border-slate-800 rounded-md flex flex-col overflow-hidden sm:static sm:flex-row sm:border-0 sm:gap-4 sm:bg-transparent sm:visible sm:opacity-100"
  >
    <a
      href="/about"
      class="p-2 underline-offset-2 sm:border-b-0 sm:bg-none hover:bg-slate-600 hover:text-slate-50 sm:hover:text-inherit sm:hover:bg-transparent sm:hover:underline"
    >
      About
    </a>
    <a
      href="/blog"
      class="p-2 underline-offset-2 hover:bg-slate-600 hover:text-slate-50 sm:hover:text-inherit sm:hover:bg-transparent sm:hover:underline"
    >
      Blog
    </a>
  </div>
  <div id="menu-btn" class="flex cursor-pointer select-none sm:hidden">
    <p class="text-slate-800">Menu</p>
    <Image
      id="carat-icon"
      src={caratIcon}
      alt="right carat icon"
      class="transition duration-75"
    />
  </div>
</div>

<script>
  const menuBtn = document.getElementById("menu-btn");
  const menu = document.querySelector("#menu");
  const rightCarat = document.getElementById("carat-icon");
  const menuControl = document.getElementById("menu-control");

  function handleMenu() {
    if (menu?.classList.contains("invisible")) {
      menu.classList.remove("invisible");
      menu.classList.remove("opacity-0");
      menu.classList.add("opacity-100");
      rightCarat?.classList.add("rotate-90");
      return;
    }

    if (menu?.classList.contains("opacity-100")) {
      menu.classList.remove("opacity-100");
      menu.classList.add("invisible");
      menu.classList.add("opacity-0");
      rightCarat?.classList.remove("rotate-90");
      return;
    }
  }

  menuBtn?.addEventListener("click", handleMenu);

  document.addEventListener("click", (e) => {
    const menuControlRect = menuControl?.getBoundingClientRect()!;

    const clickX = e.clientX;
    const clickY = e.clientY;

    const outsideClick =
      clickX < menuControlRect?.left ||
      clickX > menuControlRect?.right ||
      clickY < menuControlRect?.top ||
      clickY > menuControlRect?.bottom;

    if (outsideClick) {
      if (menu?.classList.contains("opacity-100")) {
        menu.classList.remove("opacity-100");
        menu.classList.add("invisible");
        menu.classList.add("opacity-0");
        rightCarat?.classList.remove("rotate-90");
        return;
      }
    }
  });
</script>
